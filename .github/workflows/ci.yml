name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        mongodb-version: ['6.0', '7.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Start MongoDB ${{ matrix.mongodb-version }}
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          api/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install frontend dependencies
      run: npm ci

    - name: Install backend dependencies
      working-directory: ./api
      run: npm ci

    - name: Run frontend linting
      run: npm run lint || true

    - name: Run backend linting
      working-directory: ./api
      run: npm run lint || true

    - name: Run frontend tests
      run: npm test -- --watchAll=false --coverage || true

    - name: Run backend tests
      working-directory: ./api
      env:
        MONGODB_URI: mongodb://localhost:27017/test-milk-company
        JWT_SECRET: test-secret-key
        NODE_ENV: test
      run: npm test || true

    - name: Build frontend
      run: npm run build

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: build/
        retention-days: 7

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          coverage/
          api/coverage/
        retention-days: 7

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: |
        npm ci
        cd api && npm ci

    - name: Security audit
      run: |
        npm audit --audit-level=moderate || true
        cd api && npm audit --audit-level=moderate || true

    - name: Check for outdated packages
      run: |
        npm outdated || true
        cd api && npm outdated || true